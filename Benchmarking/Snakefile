#snakemake --use-conda --cluster-config cluster_config.yaml --cluster "qsub -pe smp {cluster.num_cores} -l h_vmem={cluster.maxvmem}" -j 20

import os
# read config info into this namespace
configfile: "config.yaml"

include: "bamQC"

rule all:
    input:
        expand("{mapping_folder}/{sample}.sort.bam.bai", mapping_folder=config['mappings'], sample=config["samples"]),
        expand("{mapping_folder}/{sample}.sort.bam", mapping_folder=config['mappings'], sample=config["samples"]),
        os.path.join(config['mappings'], "BamQC.pdf"),
        expand("FastQC/{sample}_R{read}.html", sample=config["samples"], read=[1,2]),

rule fastqc:
    input:
        lambda wildcards: config["samples"][wildcards.sample]['reads']['read']
    output:
        html="FastQC/{sample}_R{read}.html",
        zip="FastQC/{sample}_R{read}.zip"
    params: ""
    wrapper:
        "0.17.4/bio/fastqc"

rule hisat:
    input:
        reads = lambda wildcards: config["samples"][wildcards.sample]['reads'].split(',')
    output:
        temp("{mapping_folder}/{sample}.bam")
    params:
        idx = config["index"],
        extra = '--known-splicesite-infile ' + config["splice_sites"]
    benchmark:
        "Benchmarks/{sample}.hisat.benchmark.txt"
    log:
        "Logs/{mapping_folder}/{sample}_hisat_map.txt"
    threads: 8                          # optional, defaults to 1
    wrapper:
      "0.17.4/bio/hisat2"

rule sort_bam:
    input:
        rules.hisat.output
    output:
        "{mapping_folder}/{sample}.sort.bam"
    params:
        "-m 4G"
    threads: 8
    wrapper:
        "0.17.4/bio/samtools/sort"
        
rule samtools_index:
    input:
        rules.sort_bam.output
    output:
        "{mapping_folder}/{sample}.sort.bam.bai"
    wrapper:
        "0.17.4/bio/samtools/index"
